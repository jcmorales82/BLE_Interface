<Window x:Class="BLE_Interface.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:lvc="clr-namespace:LiveChartsCore.SkiaSharpView.WPF;assembly=LiveChartsCore.SkiaSharpView.WPF"
        mc:Ignorable="d"
        xmlns:HelixToolkit="http://helix-toolkit.org/wpf"
        Title="BLE Interface" Height="900" Width="1440">

    <!-- Canvas for free placement of UI elements -->
    <Canvas>

        <StackPanel Orientation="Horizontal" Canvas.Left="10" Canvas.Top="305" HorizontalAlignment="Center" VerticalAlignment="Top">
            <CheckBox Content="Battery"      IsChecked="{Binding ShowBattery}"      Margin="0,0,10,0"/>
            <CheckBox Content="IMU"          IsChecked="{Binding ShowIMU}"          Margin="0,0,10,0"/>
            <CheckBox Content="Breathing"    IsChecked="{Binding ShowBreathing}"    Margin="0,0,10,0"/>
            <CheckBox Content="Stretch"      IsChecked="{Binding ShowStretch}"      Margin="0,0,10,0"/>
            <CheckBox Content="Pressure/Temp" IsChecked="{Binding ShowPressureTemp}" Margin="0,0,10,0"/>
            <CheckBox Content="HR"           IsChecked="{Binding ShowHR}"           Margin="0,0,10,0"/>
            <CheckBox Content="General"      IsChecked="{Binding ShowGeneral}"/>
        </StackPanel>

        <HelixToolkit:HelixViewport3D
        x:Name="OrientationViewport"
        ZoomExtentsWhenLoaded="True"
        ShowCoordinateSystem="True"
        CameraRotationMode="Trackball"
        CameraInertiaFactor="0"
        Canvas.Left="443" Canvas.Top="100"
        Width="219" Height="200">

            <HelixToolkit:HelixViewport3D.Camera>
                <PerspectiveCamera 
            Position="0,0,5" 
            LookDirection="0,0,-5" 
            UpDirection="0,1,0" 
            FieldOfView="45"/>
            </HelixToolkit:HelixViewport3D.Camera>


            <!-- Lighting -->
            <HelixToolkit:DefaultLights />
            <!-- Rotating Cube Model -->
            <ModelVisual3D>


                <ModelVisual3D.Transform>
                    <Transform3DGroup>
                        <!-- 1. Rotate cube -90° around Z to move +Y left -->
                        <RotateTransform3D>
                            <RotateTransform3D.Rotation>
                                <AxisAngleRotation3D Axis="0,0,1" Angle="-90"/>
                            </RotateTransform3D.Rotation>
                        </RotateTransform3D>

                        <!-- 2. Then rotate 90° around X to bring +Z forward and +X down -->
                        <RotateTransform3D>
                            <RotateTransform3D.Rotation>
                                <AxisAngleRotation3D Axis="1,0,0" Angle="90"/>
                            </RotateTransform3D.Rotation>
                        </RotateTransform3D>

                        <!-- 3. Apply live orientation from IMU -->
                        <RotateTransform3D>
                            <RotateTransform3D.Rotation>
                                <QuaternionRotation3D Quaternion="{Binding Orientation}" />
                            </RotateTransform3D.Rotation>
                        </RotateTransform3D>
                    </Transform3DGroup>
                </ModelVisual3D.Transform>




                <ModelVisual3D.Content>
                    <Model3DGroup>
                        <GeometryModel3D x:Name="CubeModel">
                            <GeometryModel3D.Geometry>
                                <MeshGeometry3D 
                            Positions="-0.5,-0.5,-0.5 0.5,-0.5,-0.5 0.5,0.5,-0.5 -0.5,0.5,-0.5 -0.5,-0.5,0.5 0.5,-0.5,0.5 0.5,0.5,0.5 -0.5,0.5,0.5"
                            TriangleIndices="0 1 2 0 2 3 4 5 6 4 6 7 0 1 5 0 5 4 2 3 7 2 7 6 0 3 7 0 7 4 1 2 6 1 6 5" />
                            </GeometryModel3D.Geometry>
                            <GeometryModel3D.Material>
                                <DiffuseMaterial Brush="RoyalBlue" />
                            </GeometryModel3D.Material>
                        </GeometryModel3D>
                    </Model3DGroup>
                </ModelVisual3D.Content>
            </ModelVisual3D>
        </HelixToolkit:HelixViewport3D>

        <!-- Row 1 Buttons -->
        <Button x:Name="btnScan"
                Content="Scan"
                Command="{Binding ScanCommand}"
                Canvas.Left="10" Canvas.Top="10"
                Width="100" Height="30"/>
        <Button x:Name="btnConnect"
                Content="Connect"
                Command="{Binding ConnectCommand}"
                Canvas.Left="120" Canvas.Top="10"
                Width="100" Height="30"/>
        <Button x:Name="btnSyncRTC"
                Content="Sync RTC"
                Command="{Binding SyncRTCCommand}"
                Canvas.Left="230" Canvas.Top="10"
                Width="100" Height="30"/>
        <Button x:Name="btnHardwareInfo"
                Content="Hardware Info"
                Command="{Binding HardwareInfoCommand}"
                Canvas.Left="340" Canvas.Top="10"
                Width="100" Height="30"/>
        <Button x:Name="btnStartActivity"
                Content="Start Activity"
                Command="{Binding StartActivityCommand}"
                Canvas.Left="450" Canvas.Top="10"
                Width="120" Height="30"/>
        <Button Canvas.Left="587" Canvas.Top="5"
                Width="150" Height="40"
                Content="Factory Cal" 
                Command="{Binding FactoryCalCommand}" />

        <!-- Row 2 Buttons -->
        <Button x:Name="btnStopActivity"
                Content="Stop Activity"
                Command="{Binding StopActivityCommand}"
                Canvas.Left="10" Canvas.Top="50"
                Width="120" Height="30"/>
        <Button x:Name="btnListFiles"
                Content="List Files"
                Command="{Binding ListFilesCommand}"
                Canvas.Left="140" Canvas.Top="50"
                Width="100" Height="30"/>
        <Button x:Name="btnDownloadAll"
                Content="Download All"
                Command="{Binding DownloadAllCommand}"
                Canvas.Left="250" Canvas.Top="50"
                Width="120" Height="30"/>
        <Button x:Name="btnStartStretch"
                Content="Start Stretch"
                Command="{Binding StartStretchCommand}"
                Canvas.Left="380" Canvas.Top="50"
                Width="120" Height="30"/>
        <Button x:Name="btnStopStretch"
                Content="Stop Stretch"
                Command="{Binding StopStretchCommand}"
                Canvas.Left="510" Canvas.Top="50"
                Width="120" Height="30"/>
        <Button x:Name="btnEraseFiles"
                Content="Erase Files"
                Command="{Binding EraseFilesCommand}"
                Canvas.Left="640" Canvas.Top="50"
                Width="120" Height="30"/>

        <!-- Devices List -->
        <ListBox x:Name="lbDevices"
                 ItemsSource="{Binding Devices}"
                 SelectedItem="{Binding SelectedDevice}"
                 Canvas.Left="10" Canvas.Top="100"
                 Width="410" Height="200">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Name}" FontWeight="Bold"/>
                        <TextBlock Text=" "/>
                        <TextBlock Text="{Binding Rssi}" Foreground="Gray"/>
                        <TextBlock Text=" dBm" Foreground="Gray"/>

                        <!-- separator dot -->
                        <TextBlock Text="  •  " Foreground="Gray"/>

                        <!-- Battery shown only for the connected device (null until connected) -->
                        <TextBlock
                Foreground="Gray"
                Text="{Binding BatteryPercent,
                               TargetNullValue=Battery —,
                               StringFormat=Battery {0}%}"/>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <!-- Live Extended‑Mode Metrics -->
        <TextBlock Canvas.Left="544" Canvas.Top="379"  Text="Counter:" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center"/>
        <TextBlock Canvas.Left="664" Canvas.Top="379"  Text="{Binding LatestCounter}" HorizontalAlignment="Left" VerticalAlignment="Center"/>

        <TextBlock Canvas.Left="544" Canvas.Top="409" Text="Chest:" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center"/>
        <TextBlock Canvas.Left="664" Canvas.Top="409" Text="{Binding LatestChestRaw}" HorizontalAlignment="Left" VerticalAlignment="Center"/>

        <TextBlock Canvas.Left="544" Canvas.Top="439" Text="Chest Filtered:" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center"/>
        <TextBlock Canvas.Left="664" Canvas.Top="439" Text="{Binding LatestChestNormalized}" HorizontalAlignment="Left" VerticalAlignment="Center"/>

        <TextBlock Canvas.Left="544" Canvas.Top="469" Text="Accelerometer:" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center"/>
        <TextBlock Canvas.Left="664" Canvas.Top="469" Text="{Binding LatestAccelerometer}" HorizontalAlignment="Left" VerticalAlignment="Center"/>

        <TextBlock Canvas.Left="544" Canvas.Top="499" Text="Gyroscope:" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center"/>
        <TextBlock Canvas.Left="664" Canvas.Top="499" Text="{Binding LatestGyroscope}" HorizontalAlignment="Left" VerticalAlignment="Center"/>

        <TextBlock Canvas.Left="544" Canvas.Top="529" Text="Player Load:" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center"/>
        <TextBlock Canvas.Left="664" Canvas.Top="529" Text="{Binding LatestPlayerLoad}" HorizontalAlignment="Left" VerticalAlignment="Center"/>

        <TextBlock Canvas.Left="544" Canvas.Top="559" Text="Pressure:" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center"/>
        <TextBlock Canvas.Left="664" Canvas.Top="559" Text="{Binding LatestPressure}" HorizontalAlignment="Left" VerticalAlignment="Center"/>

        <TextBlock Canvas.Left="544" Canvas.Top="589" Text="Temperature:" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center"/>
        <TextBlock Canvas.Left="664" Canvas.Top="589" Text="{Binding LatestTemperature}" HorizontalAlignment="Left" VerticalAlignment="Center"/>

        <!-- Realtime Stretch Chart -->
        <lvc:CartesianChart
        Series="{Binding StretchSeries}"
        XAxes="{Binding StretchXAxes}"
        YAxes="{Binding StretchYAxes}"
        Canvas.Left="1009" Canvas.Top="10"
        Width="397" Height="200"
        Background="#FF222222"/>

        <!-- Chest (raw scatter + filtered line) -->
        <lvc:CartesianChart
        Series="{Binding ChestSeries}"
        XAxes="{Binding ChestXAxes}"
        YAxes="{Binding ChestYAxes}"
        Canvas.Left="806" Canvas.Top="231"
        Width="600" Height="200" Background="Black"/>

        <!-- Accelerometer -->
        <lvc:CartesianChart
        Series="{Binding AccSeries}"
        XAxes="{Binding AccXAxes}"
        YAxes="{Binding AccYAxes}"
        Canvas.Left="806" Canvas.Top="451"
        Width="600" Height="200" Background="Black"/>

        <!-- Gyroscope -->
        <lvc:CartesianChart
        Series="{Binding GyrSeries}"
        XAxes="{Binding GyrXAxes}"
        YAxes="{Binding GyrYAxes}"
        Canvas.Left="806" Canvas.Top="674"
        Width="600" Height="200" Background="Black"/>

        <!-- Log Output -->
        <TextBox x:Name="tbLog"
                 Text="{Binding Log}"
                 IsReadOnly="True"
                 AcceptsReturn="True"
                 VerticalScrollBarVisibility="Auto"
                 Canvas.Left="10" Canvas.Top="326"
                 Width="500" Height="526"
                 TextChanged="tbLog_TextChanged" HorizontalAlignment="Left" VerticalAlignment="Center"/>
    </Canvas>
</Window>
